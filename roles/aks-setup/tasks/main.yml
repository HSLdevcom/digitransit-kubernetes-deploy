---
- name: "Create service principal"
  command: "az ad sp create-for-rbac \
    -n {{aks_name}} \
    --skip-assignment \
    --years 100"
  delegate_to: localhost
  ignore_errors: "{{ ansible_check_mode }}"
  register: out

- set_fact:
    json: "{{(out.stdout|from_json)}}"

- name: "Create {{aks_resource_group_name}}"
  command: "az group create \
    --name {{aks_resource_group_name}} \
    --location {{ az_region }}"
  delegate_to: localhost
  ignore_errors: "{{ ansible_check_mode }}"

- name: "Create {{aks_name}}"
  command: "az aks create \
    --resource-group {{aks_resource_group_name}} \
    --name {{aks_name}} \
    --node-count {{default_node_count}} \
    --node-vm-size {{default_node_vm_size}} \
    --kubernetes-version {{kubernetes_version}} \
    --generate-ssh-keys \
    --service-principal {{item.appId}} \
    --client-secret {{item.password}} \
    --uptime-sla \
    --os-sku Ubuntu \
    --nodepool-name {{default_nodepool_name}} \
    --nodepool-labels {{default_labels}}"
  delegate_to: localhost
  ignore_errors: "{{ ansible_check_mode }}"
  with_items:
    - { appId: "{{json.appId}}", password: "{{json.password}}" }

- name: "Create nodepool {{worker_nodepool_name}}"
  command: "az aks nodepool add \
    --resource-group {{aks_resource_group_name}} \
    --cluster-name {{aks_name}} \
    --name {{worker_nodepool_name}} \
    --node-count {{worker_node_count}} \
    --node-vm-size {{worker_node_vm_size}} \
    --os-sku Ubuntu \
    --labels {{worker_labels}}"
  delegate_to: localhost
  ignore_errors: "{{ ansible_check_mode }}"
