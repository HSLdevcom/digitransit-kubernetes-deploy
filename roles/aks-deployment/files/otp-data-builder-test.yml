apiVersion: v1
kind: Service
metadata:
  name: otp-data-builder
spec:
  ports:
  - port: 10070
    protocol: TCP
    name: otp-data-builder-service-port
  selector:
    app: otp-data-builder
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: otp-data-builder
  labels:
    app: otp-data-builder
spec:
  replicas: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: otp-data-builder
  template:
    metadata:
      labels:
        app: otp-data-builder
    spec:
      containers:
      - name: otp-data-builder
        image: hsldevcom/hsldevcom/otp-data-builder:next
        volumeMounts:
          - mountPath: /var/run/docker.sock
            name: "docker-sock"
          - mountPath: /opt/otp-data-builder/data"
            name: "otp-data"
          - mountPath: persistent # TODO: need to get path for persistent volume as secret
            name: "persistent"
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        # TODO: network: BRIDGE ??
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 20
          failureThreshold: 2
          httpGet:
            port: 10070
            path: /
        env:
        - name: BUILDER_TYPE
          value: "next"
        - name: BUILD_TIME
          value: "23:00:00"
        - name: DATA
          value: "/opt/otp-data-builder/data"
        - name: DOCKER_AUTH
          valueFrom:
            secretKeyRef:
              name: docker-auth
              key: docker-auth  
        - name: DOCKER_TAG
          value: "next"
        - name: DOCKER_USER
          valueFrom:
            secretKeyRef:
              name: docker-user
              key: docker-user 
        - name: HOST_DATA
          value: "/var/lib/docker/otp/data"
        - name: OTP_TAG
          value: "prod"
        - name: ROUTERS
          value: "finland, waltti, hsl"
        - name: SEED_TAG
          value: "next"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack-webhook
              key: slack-webhook  
        - name: TOOLS_TAG
          value: "prod"
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 12Gi
            cpu: 3000m
      volumes:
        - name: "docker-sock"
          azureFile: # TODO: do we want volumes on same fileshare?
            secretName: dev-aks-fileshare
            shareName: devaksshare
            readOnly: false    
        - name: "otp-data" 
          hostPath:
            path: /var/lib/docker/otp/data
        - name: "persistent"
          persistentVolumeClaim:
            claimName: persistentClaim # TODO: Persistent

