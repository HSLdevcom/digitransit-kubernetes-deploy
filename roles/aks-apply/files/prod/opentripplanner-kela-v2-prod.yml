apiVersion: v1
kind: Service
metadata:
  name: opentripplanner-kela-v2
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: opentripplanner-kela-v2-service-port
  selector:
    app: opentripplanner-kela-v2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentripplanner-kela-v2
  labels:
    app: opentripplanner-kela-v2
    restartAfterDeployments: "opentripplanner-data-con-kela-v3"
    restartDelay: "1"
    restartAt: "03.00"
    restartLimitInterval: "720"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:  # this is needed so there is "always" available machine for a new pod
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: opentripplanner-kela-v2
  template:
    metadata:
      labels:
        app: opentripplanner-kela-v2
        lastRestartDate: dummy-value
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - opentripplanner-kela-v2
                  - opentripplanner-waltti-alt-v2
                  - opentripplanner-varely-v2
                  - pelias-api
                  - pelias-data-container
              topologyKey: kubernetes.io/hostname
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hsl-map-server
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        pool: megapool
      containers:
      - name: opentripplanner-kela-v2
        image: hsldevcom/opentripplanner:v2-prod
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        volumeMounts:
          - name: otpcfgmap
            mountPath: /opt/opentripplanner/logback-include-extensions.xml
            subPath: file-from-cfgmap
        startupProbe:
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 50
          httpGet:
            port: 8080
            path: "/otp/actuators/health"
        readinessProbe:
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 5
          httpGet:
            port: 8080
            path: "/otp/actuators/health"
        livenessProbe:
          periodSeconds: 12
          timeoutSeconds: 10
          failureThreshold: 5
          httpGet:
            port: 8080
            path: "/otp/actuators/health"
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: ROUTER_DATA_CONTAINER_URL
          value: "http://opentripplanner-data-con-kela-v3:8080"
        - name: ROUTER_NAME
          value: "kela"
        - name: JAVA_OPTS
          value: "-Xmx12G -Xms12G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:G1ReservePercent=10 -XX:+PrintGC"
        resources:
          requests:
            memory: "15Gi"
            cpu: "2000m"
          limits:
            memory: "15Gi"
            cpu: "7000m"
      volumes:
      - name: otpcfgmap
        configMap:
          name: opentripplanner-cfgmap
      imagePullSecrets:
        - name: hsldevcomkey

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: opentripplanner-kela-v2-pdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: opentripplanner-kela-v2
